//+------------------------------------------------------------------+
//|                                                       CUPULA.mq4 |
//|                             Copyright 2022, Yevheniy Kopanitskyy |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2022, Yevheniy Kopanitskyy"
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict
double HIGHT;
datetime BrTime;
long CHWPX;
datetime time_bar;
string RectanglLabel="703";
string FileName1="//Cupula//CUPULA.bin";
int cupula[9999,20];// массив с данными клиента и координатами купала
string ObiektTe="2001";
string Write="208";
string PRint="209";
string A1_1[7];

//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
//--- create timer
   EventSetTimer(1);
// Загрусзка массива с данными клиента Массив типа инт
   ArrayInitialize(cupula,0);
   int file_handle1=FileOpen(FileName1,FILE_READ|FILE_WRITE|FILE_BIN);//Loading
   if(file_handle1>0)
     {

      FileSeek(file_handle1,0,SEEK_CUR);

      uint test=FileReadArray(file_handle1,cupula,0,WHOLE_ARRAY);
      FileClose(file_handle1);
     }
//Последняя пустая позиция
   for(int Bi=1; Bi<9998; Bi++)
     {
      //Print(" Fila ",Bi," Contenido de celda ",cupula[Bi,10]);//Печать наличия в массиве
      if(cupula[Bi,0]==0)
        {
         Print(" Numero de Fila Libre en CUPULA.bin ",Bi);
         break;
        }
     }
//---
   CHWPX=-1;
   ChartGetInteger(0,CHART_WIDTH_IN_PIXELS,0,CHWPX);
//--- create timer

// - Working with charts ---

   ChartSetInteger(0,CHART_SHOW_GRID,0,false);
   ChartSetInteger(0,CHART_DRAG_TRADE_LEVELS,0,false);
   ChartSetInteger(0,CHART_SHIFT,0,true);
   ChartSetDouble(0,CHART_SHIFT_SIZE,25);
   ChartSetSymbolPeriod(0,Symbol(),PERIOD_M1);
   ChartSetInteger(0,CHART_MODE,CHART_CANDLES);
   ChartSetInteger(0,CHART_COLOR_BACKGROUND,clrWhite);
   ChartSetInteger(0,CHART_COLOR_FOREGROUND,clrBlack);
   ChartSetInteger(0,CHART_COLOR_CHART_UP,clrBlack);
   ChartSetInteger(0,CHART_COLOR_CHART_DOWN,clrBlack);
   ChartSetInteger(0,CHART_COLOR_CHART_LINE,clrBlack);
   ChartSetInteger(0,CHART_COLOR_CANDLE_BULL,clrWhite);
   ChartSetInteger(0,CHART_COLOR_CANDLE_BEAR,clrBlack);
   ChartSetInteger(0,CHART_COLOR_BID,clrBlue);
   EventSetTimer(60);


//-----обиект прямоугольное окно
   ObjectCreate(0,RectanglLabel,OBJ_RECTANGLE_LABEL,0,0,0);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_XDISTANCE,CHWPX-1300);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_YDISTANCE,0);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_XSIZE,CHWPX-300);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_YSIZE,700);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_BGCOLOR,clrBlueViolet);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_BORDER_TYPE,BORDER_SUNKEN);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_COLOR,clrBlack);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_STYLE,DRAW_SECTION);
   ObjectSetInteger(0,RectanglLabel,OBJPROP_WIDTH,10);
//------Поле ввода Текста----

   ObjectCreate(ObiektTe,OBJ_EDIT,0,BrTime,HIGHT+0.00015);//Создание Поля ввода для текста
   ObjectSetInteger(0,ObiektTe,OBJPROP_XDISTANCE,CHWPX-1300);//Устанавливается дистанция по оси X 300 пикселей
   ObjectSetInteger(0,ObiektTe,OBJPROP_YDISTANCE,0);//Устанавливается дистанция по оси Y 0 пикселей
   ObjectSetInteger(0,ObiektTe,OBJPROP_XSIZE,220);//Устанавливается размер поля по оси икс в 120 пикселей
   ObjectSetInteger(0,ObiektTe,OBJPROP_YSIZE,40);//Устанавливается размер поля по оси игрик в 20 пикселей
   ObjectSetInteger(0,ObiektTe,OBJPROP_ALIGN,ALIGN_CENTER);//Устанавливается значение центровка текста на уравень центра
   ObjectSetInteger(0,ObiektTe,OBJPROP_COLOR,clrRed);//Обьект поле получает красный цвет
//--- установим текст
   string TextInit=" Nombre del Cliente ";//Установка текста в поле
   ObjectSetString(0,ObiektTe,OBJPROP_TEXT,TextInit);
//--Write Button--------------------

   ObjectDelete(Write);
   ObjectCreate(0,Write,OBJ_BUTTON,0,BrTime,HIGHT+0.00015);
   ObjectSetInteger(0,Write,OBJPROP_XDISTANCE,CHWPX-1285);
   ObjectSetInteger(0,Write,OBJPROP_YDISTANCE,190);
   ObjectSetInteger(0,Write,OBJPROP_XSIZE,80);
   ObjectSetInteger(0,Write,OBJPROP_YSIZE,40);
   string textWrite=" Write ";
   ObjectSetString(0,Write,OBJPROP_TEXT,textWrite);
   ObjectSetInteger(0,Write,OBJPROP_COLOR,clrRed);
   ObjectSetInteger(0,Write,OBJPROP_FONTSIZE,10);
   ObjectSetInteger(0,Write,OBJPROP_ALIGN,ALIGN_CENTER);
   bool Writestate=false;
   ObjectSetInteger(0,Write,OBJPROP_STATE,Writestate);
//long Writebuttonpresed=ObjectGetInteger(0,Write,OBJPROP_STATE,0);
//--Print Button--------------------

   ObjectDelete(PRint);
   ObjectCreate(0,PRint,OBJ_BUTTON,0,BrTime,HIGHT+0.00015);
   ObjectSetInteger(0,PRint,OBJPROP_XDISTANCE,CHWPX-1185);
   ObjectSetInteger(0,PRint,OBJPROP_YDISTANCE,190);
   ObjectSetInteger(0,PRint,OBJPROP_XSIZE,80);
   ObjectSetInteger(0,PRint,OBJPROP_YSIZE,40);
   string textPRint=" PRint ";
   ObjectSetString(0,PRint,OBJPROP_TEXT,textPRint);
   ObjectSetInteger(0,PRint,OBJPROP_COLOR,clrRed);
   ObjectSetInteger(0,PRint,OBJPROP_FONTSIZE,10);
   ObjectSetInteger(0,PRint,OBJPROP_ALIGN,ALIGN_CENTER);
   bool PRintestate=false;
   ObjectSetInteger(0,PRint,OBJPROP_STATE,PRintestate);
//long Writebuttonpresed=ObjectGetInteger(0,Write,OBJPROP_STATE,0);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
//--- destroy timer
   EventKillTimer();

  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
//---

  }
//+------------------------------------------------------------------+
//| Timer function                                                   |
//+------------------------------------------------------------------+
void OnTimer()
  {
//---
//--- запись в массив клиентов с групированием клиентов в группы из 4 клиентов
//--- Запись индекса 1,2,3,4 производится с лева на право по ортодокальному крещению.
//--- Производство функций также производится по тойже схеме ортодоксального крещения
   int i;
   long Writebuttonpresed=ObjectGetInteger(0,Write,OBJPROP_STATE,0);
   if(Writebuttonpresed==1)
     {

      ObjectSetInteger(0,Write,OBJPROP_STATE,0);
      //Запись Данных в Массив

      //Записываем Изображения семечки 8 бит
      i=8;//Номер строки

      A1_1[1]="Iryna";// Имя
      A1_1[2]="Kopanitska Kokhan";//Фамилия
      A1_1[3]="x2y1";//Архитектура 1
      A1_1[4]="x2y2";//Архитектура 2
      A1_1[5]="x2y1";//Архитектура 3
      A1_1[6]="x2y2";//Архитектура 4
      cupula[i,1]="8";//Индекс в Ортодоксальной Группе
      cupula[i,2]="0";//Индекс в Католической Группе
      cupula[i,3]="2";//индекс центра архитектуры 1
      cupula[i,4]="2";//индекс центра архитектуры 2
      cupula[i,5]="2";//индекс центра архитектуры 3
      cupula[i,6]="2";//индекс центра архитектуры 4

      Print("Nombre ",A1_1[1]);
      Print("Apellido ",A1_1[2]);
      Print("Arquitectura 1 ",A1_1[3]);
      Print("Arquitectura 2 ",A1_1[4]);
      Print("Arquitectura 3 ",A1_1[5]);
      Print("Arquitectura 4 ",A1_1[6]);
      Print(cupula[i,1]);
      Print(cupula[i,2]);
      Print(cupula[i,3]);
      Print(cupula[i,4]);
      Print(cupula[i,5]);
      Print(cupula[i,6]);




      //Запись внесённых символов в Массив int
      int file_handle1=FileOpen(FileName1,FILE_READ|FILE_WRITE|FILE_BIN);
      //Print("HANDLE ",file_handle13);
      if(file_handle1>0)
        {

         FileSeek(file_handle1,0,SEEK_CUR);

         uint test =FileWriteArray(file_handle1,cupula,0,WHOLE_ARRAY);
         //Print("WRITED ",test);
         FileClose(file_handle1);


        }

      //Запись внесённых символов в Массив string
      string FileName2="//Cupula//m_"+IntegerToString(i)+".bin";
      int file_handle2=FileOpen(FileName2,FILE_READ|FILE_WRITE|FILE_BIN);
      //Print("HANDLE ",file_handle13);
      if(file_handle2>0)
        {

         FileSeek(file_handle2,0,SEEK_CUR);

         uint test2 =FileWriteArray(file_handle2,A1_1,0,WHOLE_ARRAY);
         //Print("WRITED ",test);
         FileClose(file_handle2);


        }


     }


   long Printbuttonpresed=ObjectGetInteger(0,PRint,OBJPROP_STATE,0);
   if(Printbuttonpresed==1)
     {
      ObjectSetInteger(0,PRint,OBJPROP_STATE,0);

      //Автоматическая ассигнация координат купала с определением центров смежных 3 архитектур
      i=4;
      int Largo_de_Fila=100;
      int Cupol_Pipa1=100;
      int Cupol_Lugar=i;//Место от 1 до 4
      int Fila,Columna;
      int Cupula[11,11];//Размер массива с запасом в 1 строку и столбец Массив купала 10 x 10
      string Arch1,Arch2,Arch3,Arch4;//Архитектуры в системе координат XY
      int Center1,Center2,Center3,Center4;//Центры архитектур
      int Verde_Center1,Azul_Center1,Rojo_Center1,Amarillo_Center1;
      int Verde_Center2,Azul_Center2,Rojo_Center2,Amarillo_Center2;
      int Verde_Center3,Azul_Center3,Rojo_Center3,Amarillo_Center3;
      int Verde_Center4,Azul_Center4,Rojo_Center4,Amarillo_Center4;
      int P2_Verde_Center1,P2_Azul_Center1,P2_Rojo_Center1,P2_Amarillo_Center1;
      int P2_Verde_Center2,P2_Azul_Center2,P2_Rojo_Center2,P2_Amarillo_Center2;
      int P2_Verde_Center3,P2_Azul_Center3,P2_Rojo_Center3,P2_Amarillo_Center3;
      int P2_Verde_Center4,P2_Azul_Center4,P2_Rojo_Center4,P2_Amarillo_Center4;

      int P3_Verde_Center1_Lic,P3_Azul_Center1_Lic,P3_Rojo_Center1_Lic,P3_Amarillo_Center1_Lic;
      int P3_Verde_Center2_Lic,P3_Azul_Center2_Lic,P3_Rojo_Center2_Lic,P3_Amarillo_Center2_Lic;
      int P3_Verde_Center3_Lic,P3_Azul_Center3_Lic,P3_Rojo_Center3_Lic,P3_Amarillo_Center3_Lic;
      int P3_Verde_Center4_Lic,P3_Azul_Center4_Lic,P3_Rojo_Center4_Lic,P3_Amarillo_Center4_Lic;

      int P3_Verde_Center1_Izn,P3_Azul_Center1_Izn,P3_Rojo_Center1_Izn,P3_Amarillo_Center1_Izn;
      int P3_Verde_Center2_Izn,P3_Azul_Center2_Izn,P3_Rojo_Center2_Izn,P3_Amarillo_Center2_Izn;
      int P3_Verde_Center3_Izn,P3_Azul_Center3_Izn,P3_Rojo_Center3_Izn,P3_Amarillo_Center3_Izn;
      int P3_Verde_Center4_Izn,P3_Azul_Center4_Izn,P3_Rojo_Center4_Izn,P3_Amarillo_Center4_Izn;

      int P4_Verde_Center1_Lic,P4_Azul_Center1_Lic,P4_Rojo_Center1_Lic,P4_Amarillo_Center1_Lic;
      int P4_Verde_Center2_Lic,P4_Azul_Center2_Lic,P4_Rojo_Center2_Lic,P4_Amarillo_Center2_Lic;
      int P4_Verde_Center3_Lic,P4_Azul_Center3_Lic,P4_Rojo_Center3_Lic,P4_Amarillo_Center3_Lic;
      int P4_Verde_Center4_Lic,P4_Azul_Center4_Lic,P4_Rojo_Center4_Lic,P4_Amarillo_Center4_Lic;

      int P4_Verde_Center1_Izn,P4_Azul_Center1_Izn,P4_Rojo_Center1_Izn,P4_Amarillo_Center1_Izn;
      int P4_Verde_Center2_Izn,P4_Azul_Center2_Izn,P4_Rojo_Center2_Izn,P4_Amarillo_Center2_Izn;
      int P4_Verde_Center3_Izn,P4_Azul_Center3_Izn,P4_Rojo_Center3_Izn,P4_Amarillo_Center3_Izn;
      int P4_Verde_Center4_Izn,P4_Azul_Center4_Izn,P4_Rojo_Center4_Izn,P4_Amarillo_Center4_Izn;

      if(Cupol_Pipa1<=10)
        {
         Fila=1;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>10 && Cupol_Pipa1<=20)
        {
         Fila=2;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>20 && Cupol_Pipa1<=30)
        {
         Fila=3;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>30 && Cupol_Pipa1<=40)
        {
         Fila=4;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>40 && Cupol_Pipa1<=50)
        {
         Fila=5;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>50 && Cupol_Pipa1<=60)
        {
         Fila=6;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>60 && Cupol_Pipa1<=70)
        {
         Fila=7;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>70 && Cupol_Pipa1<=80)
        {
         Fila=8;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>80 && Cupol_Pipa1<=90)
        {
         Fila=9;//Используемый индекс для Y
        }
      if(Cupol_Pipa1>90 && Cupol_Pipa1<=100)
        {
         Fila=10;//Используемый индекс для Y
        }

      Columna=Cupol_Pipa1;//используемый индекс для X
      if(Cupol_Lugar==1)//Ячейка 1 и место в ячейке 1. Расчёт места по часавой стрелке.Расчёт по первой архитектуре
        {
         Arch1="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch2="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch3="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch4="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         //Коорденирование по методу места в ячейке и цвету
         //Место 1 в ячейке
         //Патерн 1 внутренний Поворот на 90 градусов Последовательно  " Указать натравление По часовой или против часовой "  Лицо
         //Подключение переменных с Северной стороны
         //Разобрать подачу на 2 примерах С севера и с Вращением по полюсам
         // Стандарт подачи со сменой полюса через переменную в 4 архитектурах

         Verde_Center1=Cupol_Pipa1;//Sev_Be_0
         Azul_Center1=Cupol_Pipa1;//Zap_Be_0
         Amarillo_Center1=Cupol_Pipa1-1;//Yug_Be_0
         Rojo_Center1=Cupol_Pipa1;//Vost_Be_0

         //Патерн 2 Внешний
         P2_Verde_Center1=Cupol_Pipa1;//Yug_Bo_0
         P2_Rojo_Center1=Cupol_Pipa1;//Zap_Bo_0
         P2_Amarillo_Center1=Cupol_Pipa1-1;//Sev_Bo_0
         P2_Azul_Center1=Cupol_Pipa1;//Vost_Bo_0



         //Патерн 3 Внешний Внешние Севр и Юг  Внутренние Запад Восток
         P3_Verde_Center1_Lic=Cupol_Pipa1;//Yug_Bo_0
         P3_Rojo_Center1_Izn=Cupol_Pipa1;//Vost_Bo_0
         P3_Amarillo_Center1_Lic=Cupol_Pipa1-1;//Sev_Bo_0
         P3_Azul_Center1_Izn=Cupol_Pipa1;//Zap_Bo_0

         //Патерн 4 Внешний Внешние Запад Восток Внутренние Севр и Юг 90 gradus
                  
         P4_Azul_Center1_Lic=Cupol_Pipa1;//Vost_Bo_0
         P4_Verde_Center1_Izn=Cupol_Pipa1;//Sev__Bo_0
         P4_Rojo_Center1_Lic=Cupol_Pipa1;//Zap_Bo_0
         P4_Amarillo_Center1_Izn=Cupol_Pipa1-1;//Yug_Bo_0


         //Класифициравать по часовой стрелке


         //Стандарт подачи со сменой полюса через переменную  в одной архитектуре 


        }
      if(Cupol_Lugar==2)//Ячейка 1 и место в ячейке 1. Расчёт места по часавой стрелке
        {
         Arch1="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch2="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch3="x"+IntegerToString(Columna+1,0)+"y"+IntegerToString(Fila,0);
         Arch4="x"+IntegerToString(Columna+1,0)+"y"+IntegerToString(Fila,0);
         //Коорденирование по методу места в ячейке и цвету
         //Место 2 в ячейке
         //Патерн внутренний 1 Поворот на 90 градусов Последовательно  " Указать натравление По часовой или против часовой " Лицо
         Verde_Center2=Cupol_Pipa1;//Sev_Bo_0
         Azul_Center2=Cupol_Pipa1;//Vost_Bo_0
         Amarillo_Center2=Cupol_Pipa1;//Yug_Bo_0
         Rojo_Center2=Cupol_Pipa1+1;//Zap_Bo_0

         //Патерн 2 Внешний
         P2_Verde_Center2=Cupol_Pipa1;//Yug_Be_0
         P2_Rojo_Center2=Cupol_Pipa1+1;//Vost_Be_0
         P2_Amarillo_Center2=Cupol_Pipa1;//Sev_Be_0
         P2_Azul_Center2=Cupol_Pipa1;//Zap_Be_0


         //Патерн 3 Внешний Внешние Севр и Юг  Внутренние Запад Восток
         P3_Verde_Center2_Lic=Cupol_Pipa1;//Yug_Be_0
         P3_Rojo_Center2_Izn=Cupol_Pipa1+1;//Zap_Be_0
         P3_Amarillo_Center2_Lic=Cupol_Pipa1;//Sev_Be_0
         P3_Azul_Center2_Izn=Cupol_Pipa1;//Vost_Be_0

         //Патерн 4 Внешний Внешние Запад Восток Внутренние Севр и Юг 90 gradus

        }
      if(Cupol_Lugar==3)//Ячейка 1 и место в ячейке 1. Расчёт места по часавой стрелке
        {
         Arch1="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch2="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila+1,0);
         Arch3="x"+IntegerToString(Columna+1,0)+"y"+IntegerToString(Fila,0);
         Arch4="x"+IntegerToString(Columna+1,0)+"y"+IntegerToString(Fila+1,0);
         //Коорденирование по методу места в ячейке и цвету
         //место 1 в ячейке
         //Патерн внутренний 1 Поворот на 90 градусов Последовательно  " Указать натравление По часовой или против часовой " Лицо
         Verde_Center3=Cupol_Pipa1;//Yug_Be_0
         Azul_Center3=Cupol_Pipa1+(Fila*10);//Vost_Be_0
         Amarillo_Center3=Cupol_Pipa1+(Fila*10);//Sev_Be_0
         Rojo_Center3=Cupol_Pipa1+1;//Zap_Be_0


         //Патерн 2 Внешний
         P2_Verde_Center3=Cupol_Pipa1;//Sev_Bo_0
         P2_Rojo_Center3=Cupol_Pipa1+1;//Vost_Bo_0
         P2_Amarillo_Center3=Cupol_Pipa1+(Fila*10);//Yug_Bo_0
         P2_Azul_Center3=Cupol_Pipa1+(Fila*10);//Zap_Bo_0


         //Патерн 3 Внешний Внешние Севр и Юг  Внутренние Запад Восток 90 gradus
         P3_Verde_Center3_Lic=Cupol_Pipa1;//Sev_Bo_0
         P3_Rojo_Center3_Izn=Cupol_Pipa1+1;//Zap_Bo_0
         P3_Amarillo_Center3_Lic=Cupol_Pipa1+(Fila*10);//Yug_Bo_0
         P3_Azul_Center3_Izn=Cupol_Pipa1+(Fila*10);//Vost_Bo_0

         //Патерн 4 Внешний Внешние Запад Восток Внутренние Севр и Юг 90 gradus



        }
      if(Cupol_Lugar==4)//Ячейка 1 и место в ячейке 1. Расчёт места по часавой стрелке
        {
         Arch1="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch2="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila+1,0);
         Arch3="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila,0);
         Arch4="x"+IntegerToString(Columna,0)+"y"+IntegerToString(Fila+1,0);
         //Коорденирование по методу места в ячейке и цвету
         //место 1 в ячейке
         //Патерн внутренний 1 Поворот на 90 градусов Последовательно  " Указать натравление По часовой или против часовой " Лицо
         Verde_Center4=Cupol_Pipa1;//Yug_Bo_0
         Azul_Center4=Cupol_Pipa1+(Fila*10);//Zap_Bo_0
         Amarillo_Center4=Cupol_Pipa1-1+(Fila*10);//Sev_Bo_0
         Rojo_Center4=Cupol_Pipa1;//Vost_Bo_0


         //Патерн 2 Внешний
         P2_Verde_Center4=Cupol_Pipa1;//Sev_Be_0
         P2_Rojo_Center4=Cupol_Pipa1;//Zap_Be_0
         P2_Amarillo_Center4=Cupol_Pipa1-1+(Fila*10);//Yug_Be_0
         P2_Azul_Center4=Cupol_Pipa1+(Fila*10);//Vost_Be_0


         //Патерн 3 Внешний Внешние Севр и Юг  Внутренние Запад Восток 90 gradus
         P3_Verde_Center4_Lic=Cupol_Pipa1;//Sev_Be_0
         P3_Rojo_Center4_Izn=Cupol_Pipa1;//Vost_Be_0
         P3_Amarillo_Center4_Lic=Cupol_Pipa1-1+(Fila*10);//Yug_Be_0
         P3_Azul_Center4_Izn=Cupol_Pipa1+(Fila*10);//Zap_Be_0

         //Патерн 4 Внешний Внешние Запад Восток Внутренние Севр и Юг 90 gradus


        }

      Print(" Arch1 ",Arch1," Arch2 ",Arch2," Arch3 ",Arch3," Arch4 ",Arch4);
      if(Cupol_Lugar==1)
        {
         Print(" Lugar ",Cupol_Lugar);
         Print(" Verde_Center1 ",Verde_Center1," Azul_Center1 ",Azul_Center1," Rojo_Center1 ",Rojo_Center1," Amarillo_Center1 ",Amarillo_Center1);
         Print(" P2_Verde_Center1 ",P2_Verde_Center1," P2_Azul_Center1 ",P2_Azul_Center1," P2_Rojo_Center1 ",P2_Rojo_Center1," P2_Amarillo_Center1 ",P2_Amarillo_Center1);
         Print(" P3_Verde_Center1_Lic ",P3_Verde_Center1_Lic," P3_Rojo_Center1_Izn ",P3_Rojo_Center1_Izn," P3_Amarillo_Center1_Lic ",P3_Amarillo_Center1_Lic," P3_Azul_Center1_Izn ",P3_Azul_Center1_Izn);

        }
      if(Cupol_Lugar==2)
        {
         Print(" Lugar ",Cupol_Lugar);
         Print(" Verde_Center2 ",Verde_Center2," Azul_Center2 ",Azul_Center2," Rojo_Center2 ",Rojo_Center2," Amarillo_Center2 ",Amarillo_Center2);
         Print(" P2_Verde_Center2 ",P2_Verde_Center2," P2_Azul_Center2 ",P2_Azul_Center2," P2_Rojo_Center2 ",P2_Rojo_Center2," P2_Amarillo_Center2 ",P2_Amarillo_Center2);
         Print(" P3_Verde_Center2_Lic ",P3_Verde_Center2_Lic," P3_Rojo_Center2_Izn ",P3_Rojo_Center2_Izn," P3_Amarillo_Center2_Lic ",P3_Amarillo_Center2_Lic," P3_Azul_Center2_Izn ",P3_Azul_Center2_Izn);
        }
      if(Cupol_Lugar==3)
        {
         Print(" Lugar ",Cupol_Lugar);
         Print(" Verde_Center3 ",Verde_Center3," Azul_Center3 ",Azul_Center3," Rojo_Center3 ",Rojo_Center3," Amarillo_Center3 ",Amarillo_Center3);
         Print(" P2_Verde_Center3 ",P2_Verde_Center3," P2_Azul_Center3 ",P2_Azul_Center3," P2_Rojo_Center3 ",P2_Rojo_Center3," P2_Amarillo_Center3 ",P2_Amarillo_Center3);
         Print(" P3_Verde_Center3_Lic ",P3_Verde_Center3_Lic," P3_Rojo_Center3_Izn ",P3_Rojo_Center3_Izn," P3_Amarillo_Center3_Lic ",P3_Amarillo_Center3_Lic," P3_Azul_Center3_Izn ",P3_Azul_Center3_Izn);

        }
      if(Cupol_Lugar==4)
        {
         Print(" Lugar ",Cupol_Lugar);
         Print(" Verde_Center4 ",Verde_Center4," Azul_Center4 ",Azul_Center4," Rojo_Center4 ",Rojo_Center4," Amarillo_Center4 ",Amarillo_Center4);
         Print(" P2_Verde_Center4 ",P2_Verde_Center4," P2_Azul_Center4 ",P2_Azul_Center4," P2_Rojo_Center4 ",P2_Rojo_Center4," P2_Amarillo_Center4 ",P2_Amarillo_Center4);
         Print(" P3_Verde_Center4_Lic ",P3_Verde_Center4_Lic," P3_Rojo_Center4_Izn ",P3_Rojo_Center4_Izn," P3_Amarillo_Center4_Lic ",P3_Amarillo_Center4_Lic," P3_Azul_Center4_Izn ",P3_Azul_Center4_Izn);

        }
      //

      // i=4;//Номер строки
      string FileName2="//Cupula//m_"+IntegerToString(i)+".bin";

      //ArrayInitialize(A1_1,0);
      uint test1;
      string test2;
      string test3;
      string test4;
      string test5;
      string test6;
      string test7;
      string test8;
      string A1_2[20];
      int file_handle2=FileOpen(FileName2,FILE_READ|FILE_TXT|FILE_CSV|FILE_BIN);//Loading
      if(file_handle2>0)
        {

         FileSeek(file_handle2,0,SEEK_CUR);

         //test1=FileReadArray(file_handle2,A1_2,0,WHOLE_ARRAY);
         test2=FileReadString(file_handle2,2);
         test3=FileReadString(file_handle2,2);
         test4=FileReadString(file_handle2,3);
         test5=FileReadString(file_handle2,4);
         test6=FileReadString(file_handle2,5);
         test7=FileReadString(file_handle2,7);
         test8=FileReadString(file_handle2,7);
         FileClose(file_handle2);
        }


      Print("Nombre ",test3);
      Print("Apellido ",test4);
      //Print("Arquitectura 1 ",test5);
      //Print("Arquitectura 2 ",test6);
      //Print("Arquitectura 3 ",test7);
      //Print("Arquitectura 4 ",test8);
      //Print("Grupo Ortodocsal ",cupula[i,1]);
      //Print("Grupo Catolico ",cupula[i,2]);
      //Print("Centro de Arquitectura 1 ",cupula[i,3]);
      //Print("Centro de Arquitectura 2 ",cupula[i,4]);
      //Print("Centro de Arquitectura 3 ",cupula[i,5]);
      //Print("Centro de Arquitectura 4 ",cupula[i,6]);
      //Print("Nombre AR ",A1_2[1]);
      //Print("Apellido AR ",A1_2[2]);
      //Print("Arquitectura 1 AR ",A1_2[3]);
      //Print("Arquitectura 2 AR ",A1_2[4]);
      //Print("Arquitectura 3 AR ",A1_2[5]);
      //Print("Arquitectura 4 AR ",A1_2[6]);
      //2 зеркала в КУБЕ. Расчёт куба в Икс и Зет показал что для XZ1 поверхности имеется обратная сторона XZ2 которая не является 100% соотношением расчёта  XZ2 где XZ1 это обратная сторона расчёта XZ2 и также не соответствует расчёту.
      //Лицевые переменные
      int x_Be_0_Lic=-1;
      int x_Bo_0_Lic=1;
      int x_Be_1_Lic=-1;
      int x_Bo_1_Lic=1;
      int z_Be_0_Lic=-1;
      int z_Bo_0_Lic=1;
      int z_Be_1_Lic=-1;
      int z_Bo_1_Lic=1;
      //Изнаночные переменные
      int x_Be_0_Izn=-1;
      int x_Bo_0_Izn=1;
      int x_Be_1_Izn=-1;
      int x_Bo_1_Izn=1;
      int z_Be_0_Izn=-1;
      int z_Bo_0_Izn=1;
      int z_Be_1_Izn=-1;
      int z_Bo_1_Izn=1;
      //XZ1 Переменные
      //XZ1 for X
      int xz1_for_x_Be_0_Lic=1;
      int xz1_for_x_Bo_0_Lic=-1;
      int xz1_for_x_Be_1_Lic=1;
      int xz1_for_x_Bo_1_Lic=-1;
      int xz1_for_x_Be_0_Izn=1;
      int xz1_for_x_Bo_0_Izn=-1;
      int xz1_for_x_Be_1_Izn=1;
      int xz1_for_x_Bo_1_Izn=-1;
      //XZ1 for Y
      int xz1_for_z_Be_0_Lic=1;
      int xz1_for_z_Bo_0_Lic=-1;
      int xz1_for_z_Be_1_Lic=1;
      int xz1_for_z_Bo_1_Lic=-1;
      int xz1_for_z_Be_0_Izn=1;
      int xz1_for_z_Bo_0_Izn=-1;
      int xz1_for_z_Be_1_Izn=1;
      int xz1_for_z_Bo_1_Izn=-1;
      //XZ2 Переменные
      //XZ2 for X
      int xz2_for_x_Be_0_Lic=1;
      int xz2_for_x_Bo_0_Lic=-1;
      int xz2_for_x_Be_1_Lic=1;
      int xz2_for_x_Bo_1_Lic=-1;
      int xz2_for_x_Be_0_Izn=1;
      int xz2_for_x_Bo_0_Izn=-1;
      int xz2_for_x_Be_1_Izn=1;
      int xz2_for_x_Bo_1_Izn=-1;
      //XZ2 for Y
      int xz2_for_z_Be_0_Lic=1;
      int xz2_for_z_Bo_0_Lic=-1;
      int xz2_for_z_Be_1_Lic=1;
      int xz2_for_z_Bo_1_Lic=-1;
      int xz2_for_z_Be_0_Izn=1;
      int xz2_for_z_Bo_0_Izn=-1;
      int xz2_for_z_Be_1_Izn=1;
      int xz2_for_z_Bo_1_Izn=-1;

      int Summa_x_p_z_p_xz1_p_xz2;
      int Lico_for_xz1,Lico_for_xz2;
      int Zerkalo_for_xz1,Zerkalo_for_xz2;
      int Podacha_for_x,Podacha_for_z,Podacha_for_x_Izn,Podacha_for_z_Izn;
      //Произвожу подачу Be_0 a Bo_0 В X и Z плоскостях
      //Podacha_for_x=x_Be_0_Lic+x_Bo_0_Lic;
      //Podacha_for_z=z_Be_0_Lic+z_Bo_0_Lic;
      //Podacha_for_x_Izn=x_Bo_0_Izn+x_Be_0_Izn;
      //Podacha_for_z_Izn=z_Bo_0_Izn+z_Be_0_Izn;
      //Print(" Podacha_for_x ",Podacha_for_x," Podacha_for_z ",Podacha_for_z);
      //Произвожу подачу Be_0 a Bo_0 В XZ1 плоскости
      //Lico_for_xz1=xz1_for_x_Be_0_Lic+xz1_for_x_Bo_0_Lic+xz1_for_z_Be_0_Lic+xz1_for_z_Bo_0_Lic;
      //Подача в зерколе выглядит так
      //Zerkalo_for_xz1=xz1_for_x_Bo_0_Lic+xz1_for_x_Be_0_Izn+xz1_for_z_Bo_0_Lic+xz1_for_z_Be_0_Izn;
      //Print(" Lico_for_xz1- ",Lico_for_xz1," Zerkalo_for_xz1- ",Zerkalo_for_xz1);
      //Произвожу подачу Be_0 a Bo_0 В XZ2 плоскости
      //Lico_for_xz2=xz2_for_x_Be_0_Lic+xz2_for_x_Bo_0_Lic+xz2_for_z_Be_1_Lic+xz2_for_z_Bo_1_Lic;
      //Подача в зерколе выглядит так
      //Zerkalo_for_xz2=xz2_for_z_Bo_0_Izn+xz2_for_z_Be_0_Izn+xz2_for_z_Bo_1_Izn+xz2_for_z_Be_1_Izn;
      //Print(" Lico_for_xz2- ",Lico_for_xz2," Zerkalo_for_xz2- ",Zerkalo_for_xz2);
      //Summa_x_p_z_p_xz1_p_xz2=Podacha_for_x+Podacha_for_x_Izn+Podacha_for_z+Podacha_for_z_Izn+Lico_for_xz1+Zerkalo_for_xz1+Lico_for_xz2+Zerkalo_for_xz2;
      //  Print(" Summa_x_p_z_p_xz1_p_xz2- ",Summa_x_p_z_p_xz1_p_xz2);
      //Произвожу подачу Be_0 a Bo_0 В X и Z плоскостя без складывания и указанием финальной переменной
      // Podacha_for_x=x_Bo_0_Lic;
      // Podacha_for_z=z_Bo_0_Lic;
      // Podacha_for_x_Izn=x_Be_0_Izn;//Не сумировать
      // Podacha_for_z_Izn=z_Be_0_Izn;//Не сумировать
      // Lico_for_xz1=xz1_for_x_Bo_0_Lic+xz1_for_z_Bo_0_Lic;
      // Zerkalo_for_xz1=xz1_for_x_Be_0_Izn+xz1_for_z_Be_0_Izn;
      // Lico_for_xz2=xz2_for_x_Bo_0_Lic+xz2_for_z_Bo_1_Lic;
      // Zerkalo_for_xz2=xz2_for_x_Be_0_Izn+xz2_for_z_Be_1_Izn;
      // int Summa_x_p_z_p_xz1_p_xz2_p_xz1Mir=Podacha_for_x+Podacha_for_z+Lico_for_xz1+Lico_for_xz2/*+ Zerkalo_for_xz1*/;//Добавление любого зеркала балансирует сопряжение в 0, Сложение 2 зеркал анулирует каждое из зеркал.
      // Print(" Summa_x_p_z_p_xz1_p_xz2_p_xz1Mir- ",Summa_x_p_z_p_xz1_p_xz2_p_xz1Mir);

      //Произвожу подачу Be_0 в X и Bo_0 в Z плоскостя без складывания и указанием финальной переменной
      // Podacha_for_x=x_Bo_0_Lic;
      // Podacha_for_z=z_Be_0_Lic;
      // Podacha_for_x_Izn=x_Be_0_Izn;//Не сумировать
      // Podacha_for_z_Izn=z_Bo_0_Izn;//Не сумировать
      // Lico_for_xz1=xz1_for_x_Bo_0_Lic+xz1_for_z_Be_0_Lic;
      //Zerkalo_for_xz1=xz1_for_x_Be_0_Izn+xz1_for_z_Bo_0_Izn;
      // Lico_for_xz2=xz2_for_x_Bo_0_Lic+xz2_for_z_Be_1_Lic;
      // Zerkalo_for_xz2=xz2_for_x_Be_0_Izn+xz2_for_z_Bo_1_Izn;
      // int Summa_x_p_z_p_xz1_p_xz2_p_xz1Mir=Podacha_for_x+Podacha_for_z+Lico_for_xz1+Lico_for_xz2 +Zerkalo_for_xz1+ Zerkalo_for_xz2;//Добавление любого из зеркал не меняет сопряжение. Состояние остаётся в 0.Сложение ё2 зеркал также не десбалансирует состояние 0
      // Print(" Summa_x_p_z_p_xz1_p_xz2_p_xz1Mir- ",Summa_x_p_z_p_xz1_p_xz2_p_xz1Mir);



     }


  }
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
